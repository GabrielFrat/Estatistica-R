summary(as.factor(amostra))
source("C:/Users/gabri/OneDrive/Projetos/Estudos/Estatistica em R/Amostra-Simples.R")
summary(as.factor(amostra))
summary(as.factor(amostra))
summary(as.factor(amostra))
amostra
source("C:/Users/gabri/OneDrive/Projetos/Estudos/Estatistica em R/Amostra-Simples.R")
amostra = sample(c(0, 1), 150, replace = TRUE, prob = c(0.7, 0.3))
amostra
summary(as.factor(amostra))
# Gerando amostra de dados aleat√≥rias
amostra = sample(c(0,1), 150, replace = TRUE, prob = c(0.5, 0.5))
amostra
summary(as.factor(amostra))
amostra = sample(c(0, 1), 150, replace = TRUE, prob = c(0.7, 0.3))
amostra
summary(as.factor(amostra))
source("C:/Users/gabri/OneDrive/Projetos/Estudos/Estatistica em R/Amostra-Simples.R")
source("C:/Users/gabri/OneDrive/Projetos/Estudos/Estatistica em R/Amostra-Simples.R")
source("C:/Users/gabri/OneDrive/Projetos/Estudos/Estatistica em R/Amostra-Simples.R")
source("C:/Users/gabri/OneDrive/Projetos/Estudos/Estatistica em R/Amostra-Simples.R")
amostra = sample(c(1:1000), 150, replace = FALSE)
amostra
source("C:/Users/gabri/OneDrive/Projetos/Estudos/Estatistica em R/Amostra-Simples.R")
source("C:/Users/gabri/OneDrive/Projetos/Estudos/Estatistica em R/Amostra-Simples.R")
amostrairis = iris[amostra==1,]
amostrairis
dim(amostrairis)
amostra = sample(c(0, 1), 150, replace = TRUE, prob = c(0.7, 0.3))
summary(as.factor(amostra))
amostrairis = iris[amostra==1,]
amostrairis
dim(amostrairis)
source("C:/Users/gabri/OneDrive/Projetos/Estudos/Estatistica em R/Amostra-Simples.R")
source("C:/Users/gabri/OneDrive/Projetos/Estudos/Estatistica em R/Amostra-Simples.R")
set.seed(2345)
sample(c(1000), 1)
#install.packages("TeachingSampling")
library("TeachingSampling")
install.packages("TeachingSampling")
library("TeachingSampling")
install.packages("magrittr")
library("TeachingSampling")
install.packages("magrittr")
library("TeachingSampling")
amostra = S.SY(150, 10)
amostra
dim(amostra)
amostrairis = iris[amostra, ]
amostrairis
dim(amostrairis)
amostra = S.SY(150, 5)
amostra
amostrairis = iris[amostra, ]
amostrairis
dim(amostrairis)
install.packages("simpling")
library("simpling")
install.packages("sampling")
library("simpling")
library("sampling")
amostrairis2 = strata(data=iris, stratanames = c("species"),
size = c(rep(proporcao, 3)), method = "srswor")
amostrairis2 = strata(data=iris, stratanames = c("Species"),
size = c(rep(proporcao, 3)), method = "srswor")
proporcao = 25
amostrairis2 = strata(data=iris, stratanames = c("Species"),
size = c(rep(proporcao, 3)), method = "srswor")
summary(amostrairis2)
infert
summary(infert)
amostra = strata(data=infert, stratanames = c("Education"),
size = c(5, 48, 47), method = "srswor")
amostra = strata(data=infert, stratanames = c("Education"),
size = c(5, 48, 47), method = "srswor")
amostra = strata(data=infert, stratanames = c("education"),
size = c(5, 48, 47), method = "srswor")
amostra
summary(amostra)
jogadores = c(40000, 18000, 12000, 250000, 30000, 140000, 300000, 40000, 800000)
mean(jogadores)
median(jogadores)
quartis  = quantile(jogadores)
quartis
sd(jogadores)
summary(jogadores)
options(warn = 1)
install.packages("semTools")
m = mvrnonorm(1000, c(1, 2), matrix(c(10, 2, 2, 5), 2, 2),
skewness = c(5, 2), kurtosis = c(3, 3))
for(i in 1:500){
m = mvrnonorm(1000, c(1, 2), matrix(c(10, 2, 2, 5), 2, 2),
skewness = c(5, 2), kurtosis = c(3, 3))
}
library(semTools)
z = rep(0, 500)
for(i in 1:500){
m = mvrnonorm(1000, c(1, 2), matrix(c(10, 2, 2, 5), 2, 2),
skewness = c(5, 2), kurtosis = c(3, 3))
}
for(i in 1:500){
m = mvrnonorm(1000, c(1, 2), matrix(c(10, 2, 2, 5), 2, 2),
skewness = c(5, 2), kurtosis = c(3, 3))
z[i] = mean(m)
if(i<4){
hist(m, breaks=50, main=paste0("Histograma ", i))
}
}
library(MASS)
for(i in 1:500){
m = mvrnonorm(1000, c(1, 2), matrix(c(10, 2, 2, 5), 2, 2),
skewness = c(5, 2), kurtosis = c(3, 3))
z[i] = mean(m)
if(i<4){
hist(m, breaks=50, main=paste0("Histograma ", i))
}
}
options(warn = 1)
if(i<4){
hist(m, breaks=50, main=paste0("Histograma ", i))
}
m = mvrnonorm(1000, c(1, 2), matrix(c(10, 2, 2, 5), 2, 2),
skewness = c(5, 2), kurtosis = c(3, 3))
if(i<4){
hist(m, breaks=50, main=paste0("Histograma ", i))
}
for(i in 1:500){
m = mvrnonorm(1000, c(1, 2), matrix(c(10, 2, 2, 5), 2, 2),
skewness = c(5, 2), kurtosis = c(3, 3))
z[i] = mean(m)
if(i<4){
hist(m, breaks=50, main=paste0("Histograma ", i))
}
}
for(i in 1:500){
m = mvrnonnorm(1000, c(1, 2), matrix(c(10, 2, 2, 5), 2, 2),
skewness = c(5, 2), kurtosis = c(3, 3))
z[i] = mean(m)
if(i<4){
hist(m, breaks=50, main=paste0("Histograma ", i))
}
}
hist(z)
set.seed(123)
x = rnorm(1000)
source("C:/Users/gabri/OneDrive/Projetos/Estudos/Estatistica em R/Teste-de-Normalidade.R", echo=TRUE)
source("C:/Users/gabri/OneDrive/Projetos/Estudos/Estatistica em R/Teste-de-Normalidade.R", echo=TRUE)
source("C:/Users/gabri/OneDrive/Projetos/Estudos/Estatistica em R/Teste-de-Normalidade.R", echo=TRUE)
source("C:/Users/gabri/OneDrive/Projetos/Estudos/Estatistica em R/Teste-de-Normalidade.R", echo=TRUE)
source("C:/Users/gabri/OneDrive/Projetos/Estudos/Estatistica em R/Teste-de-Normalidade.R", echo=TRUE)
shapiro.test(m)
source("C:/Users/gabri/OneDrive/Projetos/Estudos/Estatistica em R/Teste-de-Normalidade.R", echo=TRUE)
source("C:/Users/gabri/OneDrive/Projetos/Estudos/Estatistica em R/Teste-de-Normalidade.R", echo=TRUE)
source("C:/Users/gabri/OneDrive/Projetos/Estudos/Estatistica em R/Teste-de-Normalidade.R", echo=TRUE)
